tags:
  - name: Favorite
    description: Manage user's favorite cars

paths:
  /favorites/toggle:
    post:
      tags:
        - Favorite
      summary: Toggle favorite status for a car
      description: Add or remove a car from the user's favorites.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - carId
              properties:
                carId:
                  type: string
                  example: "df67c2ab-97c6-4205-a9a0-879f5a0cf34b"
      responses:
        '200':
          description: Favorite removed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '201':
          description: Favorite added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Missing fields
        '404':
          description: Car not found
        '500':
          description: Internal server error

  /favorites:
    get:
      tags:
        - Favorite
      summary: Get user's favorite cars
      description: Retrieves a paginated list of cars that the user has marked as favorite.
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: List of favorite cars
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Favorites retrieved successfully
                  data:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/Car'
                      total:
                        type: integer
                        example: 35
                      currentPage:
                        type: integer
                        example: 1
                      totalPages:
                        type: integer
                        example: 4
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

components:
  schemas:
    ApiResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          type: object

    Car:
      type: object
      properties:
        id:
          type: string
          example: "df67c2ab-97c6-4205-a9a0-879f5a0cf34b"
        title:
          type: string
          example: "Toyota Corolla 2020"
        price:
          type: number
          example: 15000
        
